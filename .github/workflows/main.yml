# This is a basic workflow to help you get started with Actions

name: Build and test

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  secure-aggregation-rust-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rustChannel: [ "stable", "beta", "nightly" ]

    env:
      RUST_CHANNEL_NAME: ${{ matrix.rustChannel }}

    steps:
    - uses: actions/checkout@v2

    - name: Install Nix
      uses: cachix/install-nix-action@v15
      with:
        nix_path: nixpkgs=channel:nixos-21.11

    - name: Get the magic cache (Cachix)
      uses: cachix/cachix-action@v10
      with:
        name: mangaki
        signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'

    - name: Build Rust library
      run: |
        nix-build aggregation/default.nix \
        -A packages.rustPackage \
        --argstr rustChannelName "$RUST_CHANNEL_NAME" \
   
  secure-aggregation-python-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pythonVersion: [ "python38", "python39", "python310" ]

    env:
      PYTHON_PACKAGE_NAME: ${{ matrix.pythonVersion }}

    steps:
    - uses: actions/checkout@v2

    - name: Install Nix
      uses: cachix/install-nix-action@v15
      with:
        nix_path: nixpkgs=channel:nixos-22.05

    - name: Get the magic cache (Cachix)
      uses: cachix/cachix-action@v10
      with:
        name: mangaki
        signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'

    - name: Run tests
      run: |
        nix-shell aggregation/default.nix \
        -A shell \
        --argstr pythonPackageName "$PYTHON_PACKAGE_NAME" \
        --command "py.test aggregation/ --cov-report=xml --cov=aggregation"
    
    - name: Report coverage results to CodeCov
      run: bash <(curl -s https://codecov.io/bash)

  firaga-test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        blasProvider: [ "openblasCompat" ] # XXX: when Intel MKL failures are fixed, add it back.
        pythonVersion: [ "python38", "python39", "python310" ]

    env:
      PYTHON_PACKAGE_NAME: ${{ matrix.pythonVersion }}
      BLAS_PROVIDER: ${{ matrix.blasProvider }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      
    - name: Install Nix
      uses: cachix/install-nix-action@v14.1
      
    - name: Get the magic cache (Cachix)
      uses: cachix/cachix-action@v10
      with:
        # Name of a cachix cache to push and pull/substitute
        name: mangaki
        # Signing key secret retrieved after creating binary cache on https://cachix.org
        signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'

    - name: Run tests
      run: |
        nix-shell default.nix \
        -A shell \
        --argstr blasProvider "$BLAS_PROVIDER" \
        --argstr pythonPackageName "$PYTHON_PACKAGE_NAME" \
        --command "py.test zero/ --cov-report=xml --cov=zero"
    
    - name: Report coverage results to CodeCov
      run: bash <(curl -s https://codecov.io/bash)

